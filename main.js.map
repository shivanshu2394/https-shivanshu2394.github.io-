{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/components/dashboard-card/dashboard-card.component.ts","./src/app/components/dashboard-card/dashboard-card.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'countries', component: CountriesComponent}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Covid19-App';\n}\n","<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\n// import { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { GoogleChartsModule } from 'angular-google-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // Ng2GoogleChartsModule,\n    GoogleChartsModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalData } from 'src/app/models/global-data';\nimport { DateWiseData } from 'src/app/models/global-date-wise-data';\nimport { GoogleChartComponent, GoogleChartInterface } from 'ng2-google-charts';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data: GlobalData[];\n  countries: String[] = [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData: DateWiseData[];\n  dateWiseData;\n  datatable = [];\n  chart = {\n    LineChart: \"LineChart\",\n    height: 700,\n    options: {\n      hAxis: {\n        title: 'Month'\n      },\n      vAxis: {\n        title: 'Cases'\n      },\n      animation: {\n        duration: 1000,\n        easing: 'out',\n      },\n      is3D: true\n    }\n  }\n  loading = true;\n\n  constructor(private dataService: DataServiceService) { }\n\n  ngOnInit() {\n    merge(\n      this.dataService.getDateWiseData().pipe(\n        map(result => {\n          this.dateWiseData = result;\n        })\n      ),\n      this.dataService.getGlobalData().pipe(map(result => {\n        this.data = result;\n        this.data.forEach(cs => {\n          this.countries.push(cs.country)\n        })\n      }))\n    ).subscribe(\n      {\n        complete: () => {\n          this.getSelectedCountry('India')\n          this.updateChart();\n          this.loading = false;\n        }\n      }\n    )\n  }\n\n  getSelectedCountry(country: any) {\n    this.data.forEach(data => {\n      if (data.country == country) {\n        this.totalConfirmed = data.confirmed;\n        this.totalActive = data.active;\n        this.totalDeaths = data.deaths;\n        this.totalRecovered = data.recovered;\n      }\n    });\n    this.selectedCountryData = this.dateWiseData[country];\n\n    this.selectedCountryData.sort((a: any, b: any) => b.date - a.date);\n\n    this.updateChart();\n  }\n\n  updateChart() {\n    this.datatable = [];\n    this.selectedCountryData.forEach(cs => {\n      this.datatable.push([cs.date, cs.cases])\n    });\n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n  <div class=\"ui loader\"></div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n  <h1 class=\"display-4\">Corona Covid-19 Tracker for Country</h1>\n  <hr>\n\n  <div class=\"mx-auto\">\n    <div class=\"formgroup col-lg-5 mx-auto\">\n      <label for=\"country\">\n        <h2>Select Country</h2>\n      </label>\n      <select name=\"\" class=\"form-control\" id=\"country\" #input (change)='getSelectedCountry(input.value)'\n        selected=\"India\">\n        <option value=\"{{con}}\" *ngFor='let con of countries' [selected]=\"con == 'India'\"> {{con}}\n        </option>\n      </select>\n    </div>\n  </div>\n\n  <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'></app-dashboard-card>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Date</th>\n            <th>Cases</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr *ngFor='let case of selectedCountryData; index as i'>\n            <td>{{i+1}}</td>\n            <td>{{case.date | date}}</td>\n            <td>{{case.cases}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <div class=\"col\">\n      <google-chart [type]='chart.LineChart' [options]='chart.options' [data]='datatable' [height]='chart.height'>\n      </google-chart>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalRecovered')\n  totalRecovered;\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h2>Confirmed</h2>\n      </div>\n      <div class=\"value\">\n       {{totalConfirmed}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h2>Active</h2>\n      </div>\n      <div class=\"value\">\n        {{totalActive}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h2>Deaths</h2>\n      </div>\n      <div class=\"value\">\n        {{totalDeaths}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h2>Recovered</h2>\n      </div>\n      <div class=\"value\">\n        {{totalRecovered}}\n      </div>\n    </div>\n  </div>\n\n  \n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalData } from 'src/app/models/global-data';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData: GlobalData[];\n  datatable = [];\n  chart = {\n    PieChart: \"PieChart\",\n    ColumnChart: 'ColumnChart',\n    height: 700,\n    width:700,\n    options: {\n      hAxis: {\n        title: 'Country'\n      },\n      vAxis: {\n        title: 'Cases'\n      },\n      animation: {\n        duration: 1000,\n        easing: 'out',\n      },\n    }\n  }\n\n  constructor(private dataService: DataServiceService) { }\n\n  ngOnInit(): void {\n\n    this.dataService.getGlobalData()\n      .subscribe(\n        {\n          next: (result) => {\n            this.globalData = result;\n            result.forEach(cs => {\n              if (!Number.isNaN(cs.confirmed)) {\n                this.totalActive += cs.active\n                this.totalConfirmed += cs.confirmed\n                this.totalDeaths += cs.deaths\n                this.totalRecovered += cs.active\n              }\n            })\n            this.initChart('c');\n          },\n          complete: () => {\n            this.loading = false;\n          }\n        }\n      )\n  }\n\n\n\n  updateChart(input: HTMLInputElement) {\n    this.initChart(input.value)\n  }\n\n  initChart(caseType: string) {\n\n     this.datatable = [];\n    // this.dataTable.push([\"Country\", \"Cases\"]);\n\n    // Sorting the data, according to the cases...\n    this.globalData.sort((a, b) => b.confirmed - a.confirmed);\n\n    this.globalData.forEach(cs => {\n      let value: number;\n      if (caseType == 'c')\n        if (cs.confirmed > 200000)\n          value = cs.confirmed\n\n      if (caseType == 'a')\n        if (cs.active > 200000)\n          value = cs.active\n      if (caseType == 'd')\n        if (cs.deaths > 50000)\n          value = cs.deaths\n\n      if (caseType == 'r')\n        if (cs.recovered > 200000)\n          value = cs.recovered\n\n      if (value != undefined) {\n        this.datatable.push([\n          cs.country, value\n        ])\n      }\n\n    })\n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n  <div class=\"ui loader\"></div>\n</div>\n<div class=\"jumbotron bg-white text-center\">\n  <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n  <hr>\n  <app-dashboard-card [totalConfirmed]='totalConfirmed' [totalActive]='totalActive' [totalDeaths]='totalDeaths'\n    [totalRecovered]='totalRecovered'></app-dashboard-card>\n</div>\n<hr>\n\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label>\n      <h2>Select Case Type:</h2>\n    </label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"confirmed\" #confirmed (click)=\"updateChart(confirmed)\" value=\"c\" name=\"caseType\"\n          checked=\"\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"confirmed\">Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"deaths\" #deaths (click)=\"updateChart(deaths)\" value=\"d\" name=\"caseType\" tabindex=\"0\"\n          class=\"hidden\">\n        <label for=\"deaths\">Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"recovered\" #recovered (click)=\"updateChart(recovered)\" value=\"r\" name=\"caseType\"\n          tabindex=\"0\" class=\"hidden\">\n        <label for=\"recovered\">Recovered</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"active\" #active (click)=\"updateChart(active)\" value=\"a\" name=\"caseType\" tabindex=\"0\"\n          class=\"hidden\">\n        <label for=\"active\">Active</label>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col\">\n    <google-chart [type]='chart.ColumnChart' [options]='chart.options'  style=\"width: 100%;\"  [data]='datatable' [height]='chart.height'>\n    </google-chart>\n  </div>\n  <div class=\"col\">\n    <google-chart [type]='chart.PieChart' [options]='chart.options'  style=\"width: 90%;\"  [data]='datatable' [height]='chart.height'>\n    </google-chart>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" routerLink='/'><h1>COVID-19 TRACKER</h1></a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink='/'><h3>Home</h3><span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink='countries'><h3>Countries</h3></a>\n      </li>\n    </ul>\n  </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { GlobalData } from '../models/global-data';\nimport { DateWiseData } from '../models/global-date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private globalDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/08-25-2020.csv';\n\n  private dateWiseDataUrl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv';\n  constructor(private http: HttpClient) { }\n\n  getGlobalData() {\n    return this.http.get(this.globalDataUrl, { responseType: 'text' }).pipe(\n      map(result => {\n        let data: GlobalData[] = [];\n        let rows = result.split('\\n');\n        let raw = {};\n        rows.splice(0, 1);\n\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n          let cs = {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10]\n          };\n          let temp: GlobalData = raw[cs.country];\n\n          if (temp) {\n            temp.active = cs.active + temp.active;\n            temp.confirmed = cs.confirmed + temp.confirmed;\n            temp.deaths = cs.deaths + temp.deaths;\n            temp.recovered = cs.recovered + temp.recovered;\n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n        })\n\n        return <GlobalData[]>Object.values(raw);\n      })\n    )\n  }\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseDataUrl, { responseType: 'text' })\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        // console.log(rows);\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/)\n        dates.splice(0, 4);\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/)\n          let con = cols[1];\n          cols.splice(0, 4);\n          // console.log(con , cols);\n          mainData[con] = [];\n          cols.forEach((value, index) => {\n            let dw: DateWiseData = {\n              cases: +value,\n              country: con,\n              date: new Date(Date.parse(dates[index]))\n            }\n            mainData[con].push(dw)\n          })\n        })\n        return mainData;\n      }))\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}